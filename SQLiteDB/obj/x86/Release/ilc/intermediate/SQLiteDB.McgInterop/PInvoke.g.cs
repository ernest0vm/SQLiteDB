#define MCG_WINRT_SUPPORTED
using Mcg.System;
using System;
using System.Collections.Generic;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Runtime.InteropServices.WindowsRuntime;


// -----------------------------------------------------------------------------------------------------------
// 
// WARNING: THIS SOURCE FILE IS FOR 32-BIT BUILDS ONLY!
// 
// MCG GENERATED CODE
// 
// This C# source file is generated by MCG and is added into the application at compile time to support interop features.
// 
// It has three primary components:
// 
// 1. Public type definitions with interop implementation used by this application including WinRT & COM data structures and P/Invokes.
// 
// 2. The '__Interop' class containing marshaling code that acts as a bridge from managed code to native code.
// 
// 3. The 'McgNative' class containing marshaling code and native type definitions that call into native code and are called by native code.
// 
// -----------------------------------------------------------------------------------------------------------
// 
// warning CS0067: The event 'event' is never used
#pragma warning disable 67
// warning CS0169: The field 'field' is never used
#pragma warning disable 169
// warning CS0649: Field 'field' is never assigned to, and will always have its default value 0
#pragma warning disable 414
// warning CS0414: The private field 'field' is assigned but its value is never used
#pragma warning disable 649
// warning CS1591: Missing XML comment for publicly visible type or member 'Type_or_Member'
#pragma warning disable 1591
// warning CS0108 'member1' hides inherited member 'member2'. Use the new keyword if hiding was intended.
#pragma warning disable 108
// warning CS0114 'member1' hides inherited member 'member2'.  To make the current method override that implementation, add the override keyword. Otherwise add the new keyword.
#pragma warning disable 114
// warning CS0659 'type' overrides Object.Equals but does not override GetHashCode.
#pragma warning disable 659
// warning CS0465 Introducing a 'Finalize' method can interfere with destructor invocation. Did you intend to declare a destructor?
#pragma warning disable 465
// warning CS0028 'function declaration' has the wrong signature to be an entry point
#pragma warning disable 28
// warning CS0162 Unreachable code Detected
#pragma warning disable 162
// warning CS0628 new protected member declared in sealed class
#pragma warning disable 628

namespace __Interop
{
	/// <summary>
	/// P/Invoke class for module 'sqlite3'
	/// </summary>
	public unsafe static partial class sqlite3
	{
		// Signature, sqlite3_bind_blob, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.Win32HandleMarshaller] Microsoft_Data_Sqlite_Interop_Sqlite3StmtHandle__Microsoft_Data_Sqlite____w64 int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableArrayMarshaller] rg_byte__unsigned char *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("Microsoft.Data.Sqlite, Version=1.1.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60", "Microsoft.Data.Sqlite.Interop.NativeMethods+Sqlite3_sqlite3", "sqlite3_bind_blob")]
		public static int sqlite3_bind_blob(
					global::Microsoft.Data.Sqlite.Interop.Sqlite3StmtHandle__Microsoft_Data_Sqlite pStmt, 
					int i, 
					byte[] zData, 
					int nData, 
					global::System.IntPtr xDel)
		{
			// Setup
			bool addRefed = false;
			byte* unsafe_zData;
			int unsafe___value;
			// Marshalling
			pStmt.DangerousAddRef(ref addRefed);
			fixed (byte* pinned_zData = global::__Interop.McgHelpers.GetArrayForCompat(zData))
			{
				unsafe_zData = (byte*)pinned_zData;
				// Call to native method
				unsafe___value = global::__Interop.sqlite3_PInvokes.sqlite3_bind_blob(
									pStmt.DangerousGetHandle(), 
									i, 
									unsafe_zData, 
									nData, 
									xDel
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			}
			if (addRefed)
				pStmt.DangerousRelease();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_bind_double, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.Win32HandleMarshaller] Microsoft_Data_Sqlite_Interop_Sqlite3StmtHandle__Microsoft_Data_Sqlite____w64 int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] double__double, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("Microsoft.Data.Sqlite, Version=1.1.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60", "Microsoft.Data.Sqlite.Interop.NativeMethods+Sqlite3_sqlite3", "sqlite3_bind_double")]
		public static int sqlite3_bind_double(
					global::Microsoft.Data.Sqlite.Interop.Sqlite3StmtHandle__Microsoft_Data_Sqlite pStmt, 
					int i, 
					double rValue)
		{
			// Setup
			bool addRefed = false;
			int unsafe___value;
			// Marshalling
			pStmt.DangerousAddRef(ref addRefed);
			// Call to native method
			unsafe___value = global::__Interop.sqlite3_PInvokes.sqlite3_bind_double(
								pStmt.DangerousGetHandle(), 
								i, 
								rValue
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			if (addRefed)
				pStmt.DangerousRelease();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_bind_int64, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.Win32HandleMarshaller] Microsoft_Data_Sqlite_Interop_Sqlite3StmtHandle__Microsoft_Data_Sqlite____w64 int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] long____int64, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("Microsoft.Data.Sqlite, Version=1.1.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60", "Microsoft.Data.Sqlite.Interop.NativeMethods+Sqlite3_sqlite3", "sqlite3_bind_int64")]
		public static int sqlite3_bind_int64(
					global::Microsoft.Data.Sqlite.Interop.Sqlite3StmtHandle__Microsoft_Data_Sqlite pStmt, 
					int i, 
					long iValue)
		{
			// Setup
			bool addRefed = false;
			int unsafe___value;
			// Marshalling
			pStmt.DangerousAddRef(ref addRefed);
			// Call to native method
			unsafe___value = global::__Interop.sqlite3_PInvokes.sqlite3_bind_int64(
								pStmt.DangerousGetHandle(), 
								i, 
								iValue
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			if (addRefed)
				pStmt.DangerousRelease();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_bind_null, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.Win32HandleMarshaller] Microsoft_Data_Sqlite_Interop_Sqlite3StmtHandle__Microsoft_Data_Sqlite____w64 int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("Microsoft.Data.Sqlite, Version=1.1.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60", "Microsoft.Data.Sqlite.Interop.NativeMethods+Sqlite3_sqlite3", "sqlite3_bind_null")]
		public static int sqlite3_bind_null(
					global::Microsoft.Data.Sqlite.Interop.Sqlite3StmtHandle__Microsoft_Data_Sqlite pStmt, 
					int i)
		{
			// Setup
			bool addRefed = false;
			int unsafe___value;
			// Marshalling
			pStmt.DangerousAddRef(ref addRefed);
			// Call to native method
			unsafe___value = global::__Interop.sqlite3_PInvokes.sqlite3_bind_null(
								pStmt.DangerousGetHandle(), 
								i
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			if (addRefed)
				pStmt.DangerousRelease();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_bind_parameter_count, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.Win32HandleMarshaller] Microsoft_Data_Sqlite_Interop_Sqlite3StmtHandle__Microsoft_Data_Sqlite____w64 int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("Microsoft.Data.Sqlite, Version=1.1.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60", "Microsoft.Data.Sqlite.Interop.NativeMethods+Sqlite3_sqlite3", "sqlite3_bind_parameter_count")]
		public static int sqlite3_bind_parameter_count(global::Microsoft.Data.Sqlite.Interop.Sqlite3StmtHandle__Microsoft_Data_Sqlite stmt)
		{
			// Setup
			bool addRefed = false;
			int unsafe___value;
			// Marshalling
			stmt.DangerousAddRef(ref addRefed);
			// Call to native method
			unsafe___value = global::__Interop.sqlite3_PInvokes.sqlite3_bind_parameter_count(stmt.DangerousGetHandle());
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			if (addRefed)
				stmt.DangerousRelease();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_bind_parameter_index, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.Win32HandleMarshaller] Microsoft_Data_Sqlite_Interop_Sqlite3StmtHandle__Microsoft_Data_Sqlite____w64 int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("Microsoft.Data.Sqlite, Version=1.1.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60", "Microsoft.Data.Sqlite.Interop.NativeMethods+Sqlite3_sqlite3", "sqlite3_bind_parameter_index")]
		public static int sqlite3_bind_parameter_index(
					global::Microsoft.Data.Sqlite.Interop.Sqlite3StmtHandle__Microsoft_Data_Sqlite pStmt, 
					global::System.IntPtr zName)
		{
			// Setup
			bool addRefed = false;
			int unsafe___value;
			// Marshalling
			pStmt.DangerousAddRef(ref addRefed);
			// Call to native method
			unsafe___value = global::__Interop.sqlite3_PInvokes.sqlite3_bind_parameter_index(
								pStmt.DangerousGetHandle(), 
								zName
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			if (addRefed)
				pStmt.DangerousRelease();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_bind_parameter_name, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, [fwd] [in] [Mcg.CodeGen.Win32HandleMarshaller] Microsoft_Data_Sqlite_Interop_Sqlite3StmtHandle__Microsoft_Data_Sqlite____w64 int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("Microsoft.Data.Sqlite, Version=1.1.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60", "Microsoft.Data.Sqlite.Interop.NativeMethods+Sqlite3_sqlite3", "sqlite3_bind_parameter_name")]
		public static global::System.IntPtr sqlite3_bind_parameter_name(
					global::Microsoft.Data.Sqlite.Interop.Sqlite3StmtHandle__Microsoft_Data_Sqlite stmt, 
					int i)
		{
			// Setup
			bool addRefed = false;
			global::System.IntPtr unsafe___value;
			// Marshalling
			stmt.DangerousAddRef(ref addRefed);
			// Call to native method
			unsafe___value = global::__Interop.sqlite3_PInvokes.sqlite3_bind_parameter_name(
								stmt.DangerousGetHandle(), 
								i
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			if (addRefed)
				stmt.DangerousRelease();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_bind_text, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.Win32HandleMarshaller] Microsoft_Data_Sqlite_Interop_Sqlite3StmtHandle__Microsoft_Data_Sqlite____w64 int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("Microsoft.Data.Sqlite, Version=1.1.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60", "Microsoft.Data.Sqlite.Interop.NativeMethods+Sqlite3_sqlite3", "sqlite3_bind_text")]
		public static int sqlite3_bind_text(
					global::Microsoft.Data.Sqlite.Interop.Sqlite3StmtHandle__Microsoft_Data_Sqlite pStmt, 
					int i, 
					global::System.IntPtr zData, 
					int n, 
					global::System.IntPtr xDel)
		{
			// Setup
			bool addRefed = false;
			int unsafe___value;
			// Marshalling
			pStmt.DangerousAddRef(ref addRefed);
			// Call to native method
			unsafe___value = global::__Interop.sqlite3_PInvokes.sqlite3_bind_text(
								pStmt.DangerousGetHandle(), 
								i, 
								zData, 
								n, 
								xDel
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			if (addRefed)
				pStmt.DangerousRelease();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_busy_timeout, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.Win32HandleMarshaller] Microsoft_Data_Sqlite_Interop_Sqlite3Handle__Microsoft_Data_Sqlite____w64 int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("Microsoft.Data.Sqlite, Version=1.1.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60", "Microsoft.Data.Sqlite.Interop.NativeMethods+Sqlite3_sqlite3", "sqlite3_busy_timeout")]
		public static int sqlite3_busy_timeout(
					global::Microsoft.Data.Sqlite.Interop.Sqlite3Handle__Microsoft_Data_Sqlite db, 
					int ms)
		{
			// Setup
			bool addRefed = false;
			int unsafe___value;
			// Marshalling
			db.DangerousAddRef(ref addRefed);
			// Call to native method
			unsafe___value = global::__Interop.sqlite3_PInvokes.sqlite3_busy_timeout(
								db.DangerousGetHandle(), 
								ms
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			if (addRefed)
				db.DangerousRelease();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_changes, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.Win32HandleMarshaller] Microsoft_Data_Sqlite_Interop_Sqlite3Handle__Microsoft_Data_Sqlite____w64 int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("Microsoft.Data.Sqlite, Version=1.1.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60", "Microsoft.Data.Sqlite.Interop.NativeMethods+Sqlite3_sqlite3", "sqlite3_changes")]
		public static int sqlite3_changes(global::Microsoft.Data.Sqlite.Interop.Sqlite3Handle__Microsoft_Data_Sqlite db)
		{
			// Setup
			bool addRefed = false;
			int unsafe___value;
			// Marshalling
			db.DangerousAddRef(ref addRefed);
			// Call to native method
			unsafe___value = global::__Interop.sqlite3_PInvokes.sqlite3_changes(db.DangerousGetHandle());
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			if (addRefed)
				db.DangerousRelease();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_close, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("Microsoft.Data.Sqlite, Version=1.1.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60", "Microsoft.Data.Sqlite.Interop.NativeMethods+Sqlite3_sqlite3", "sqlite3_close")]
		public static int sqlite3_close(global::System.IntPtr db)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.sqlite3_PInvokes.sqlite3_close(db);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_close_v2, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("Microsoft.Data.Sqlite, Version=1.1.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60", "Microsoft.Data.Sqlite.Interop.NativeMethods+Sqlite3_sqlite3", "sqlite3_close_v2")]
		public static int sqlite3_close_v2(global::System.IntPtr db)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.sqlite3_PInvokes.sqlite3_close_v2(db);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_column_blob, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, [fwd] [in] [Mcg.CodeGen.Win32HandleMarshaller] Microsoft_Data_Sqlite_Interop_Sqlite3StmtHandle__Microsoft_Data_Sqlite____w64 int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("Microsoft.Data.Sqlite, Version=1.1.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60", "Microsoft.Data.Sqlite.Interop.NativeMethods+Sqlite3_sqlite3", "sqlite3_column_blob")]
		public static global::System.IntPtr sqlite3_column_blob(
					global::Microsoft.Data.Sqlite.Interop.Sqlite3StmtHandle__Microsoft_Data_Sqlite pStmt, 
					int iCol)
		{
			// Setup
			bool addRefed = false;
			global::System.IntPtr unsafe___value;
			// Marshalling
			pStmt.DangerousAddRef(ref addRefed);
			// Call to native method
			unsafe___value = global::__Interop.sqlite3_PInvokes.sqlite3_column_blob(
								pStmt.DangerousGetHandle(), 
								iCol
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			if (addRefed)
				pStmt.DangerousRelease();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_column_bytes, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.Win32HandleMarshaller] Microsoft_Data_Sqlite_Interop_Sqlite3StmtHandle__Microsoft_Data_Sqlite____w64 int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("Microsoft.Data.Sqlite, Version=1.1.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60", "Microsoft.Data.Sqlite.Interop.NativeMethods+Sqlite3_sqlite3", "sqlite3_column_bytes")]
		public static int sqlite3_column_bytes(
					global::Microsoft.Data.Sqlite.Interop.Sqlite3StmtHandle__Microsoft_Data_Sqlite pStmt, 
					int iCol)
		{
			// Setup
			bool addRefed = false;
			int unsafe___value;
			// Marshalling
			pStmt.DangerousAddRef(ref addRefed);
			// Call to native method
			unsafe___value = global::__Interop.sqlite3_PInvokes.sqlite3_column_bytes(
								pStmt.DangerousGetHandle(), 
								iCol
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			if (addRefed)
				pStmt.DangerousRelease();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_column_count, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.Win32HandleMarshaller] Microsoft_Data_Sqlite_Interop_Sqlite3StmtHandle__Microsoft_Data_Sqlite____w64 int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("Microsoft.Data.Sqlite, Version=1.1.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60", "Microsoft.Data.Sqlite.Interop.NativeMethods+Sqlite3_sqlite3", "sqlite3_column_count")]
		public static int sqlite3_column_count(global::Microsoft.Data.Sqlite.Interop.Sqlite3StmtHandle__Microsoft_Data_Sqlite stmt)
		{
			// Setup
			bool addRefed = false;
			int unsafe___value;
			// Marshalling
			stmt.DangerousAddRef(ref addRefed);
			// Call to native method
			unsafe___value = global::__Interop.sqlite3_PInvokes.sqlite3_column_count(stmt.DangerousGetHandle());
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			if (addRefed)
				stmt.DangerousRelease();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_column_decltype, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, [fwd] [in] [Mcg.CodeGen.Win32HandleMarshaller] Microsoft_Data_Sqlite_Interop_Sqlite3StmtHandle__Microsoft_Data_Sqlite____w64 int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("Microsoft.Data.Sqlite, Version=1.1.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60", "Microsoft.Data.Sqlite.Interop.NativeMethods+Sqlite3_sqlite3", "sqlite3_column_decltype")]
		public static global::System.IntPtr sqlite3_column_decltype(
					global::Microsoft.Data.Sqlite.Interop.Sqlite3StmtHandle__Microsoft_Data_Sqlite stmt, 
					int iCol)
		{
			// Setup
			bool addRefed = false;
			global::System.IntPtr unsafe___value;
			// Marshalling
			stmt.DangerousAddRef(ref addRefed);
			// Call to native method
			unsafe___value = global::__Interop.sqlite3_PInvokes.sqlite3_column_decltype(
								stmt.DangerousGetHandle(), 
								iCol
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			if (addRefed)
				stmt.DangerousRelease();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_column_double, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] double__double, [fwd] [in] [Mcg.CodeGen.Win32HandleMarshaller] Microsoft_Data_Sqlite_Interop_Sqlite3StmtHandle__Microsoft_Data_Sqlite____w64 int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("Microsoft.Data.Sqlite, Version=1.1.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60", "Microsoft.Data.Sqlite.Interop.NativeMethods+Sqlite3_sqlite3", "sqlite3_column_double")]
		public static double sqlite3_column_double(
					global::Microsoft.Data.Sqlite.Interop.Sqlite3StmtHandle__Microsoft_Data_Sqlite stmt, 
					int iCol)
		{
			// Setup
			bool addRefed = false;
			double unsafe___value;
			// Marshalling
			stmt.DangerousAddRef(ref addRefed);
			// Call to native method
			unsafe___value = global::__Interop.sqlite3_PInvokes.sqlite3_column_double(
								stmt.DangerousGetHandle(), 
								iCol
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			if (addRefed)
				stmt.DangerousRelease();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_column_int64, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] long____int64, [fwd] [in] [Mcg.CodeGen.Win32HandleMarshaller] Microsoft_Data_Sqlite_Interop_Sqlite3StmtHandle__Microsoft_Data_Sqlite____w64 int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("Microsoft.Data.Sqlite, Version=1.1.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60", "Microsoft.Data.Sqlite.Interop.NativeMethods+Sqlite3_sqlite3", "sqlite3_column_int64")]
		public static long sqlite3_column_int64(
					global::Microsoft.Data.Sqlite.Interop.Sqlite3StmtHandle__Microsoft_Data_Sqlite stmt, 
					int iCol)
		{
			// Setup
			bool addRefed = false;
			long unsafe___value;
			// Marshalling
			stmt.DangerousAddRef(ref addRefed);
			// Call to native method
			unsafe___value = global::__Interop.sqlite3_PInvokes.sqlite3_column_int64(
								stmt.DangerousGetHandle(), 
								iCol
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			if (addRefed)
				stmt.DangerousRelease();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_column_name, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, [fwd] [in] [Mcg.CodeGen.Win32HandleMarshaller] Microsoft_Data_Sqlite_Interop_Sqlite3StmtHandle__Microsoft_Data_Sqlite____w64 int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("Microsoft.Data.Sqlite, Version=1.1.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60", "Microsoft.Data.Sqlite.Interop.NativeMethods+Sqlite3_sqlite3", "sqlite3_column_name")]
		public static global::System.IntPtr sqlite3_column_name(
					global::Microsoft.Data.Sqlite.Interop.Sqlite3StmtHandle__Microsoft_Data_Sqlite stmt, 
					int iCol)
		{
			// Setup
			bool addRefed = false;
			global::System.IntPtr unsafe___value;
			// Marshalling
			stmt.DangerousAddRef(ref addRefed);
			// Call to native method
			unsafe___value = global::__Interop.sqlite3_PInvokes.sqlite3_column_name(
								stmt.DangerousGetHandle(), 
								iCol
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			if (addRefed)
				stmt.DangerousRelease();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_column_text, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, [fwd] [in] [Mcg.CodeGen.Win32HandleMarshaller] Microsoft_Data_Sqlite_Interop_Sqlite3StmtHandle__Microsoft_Data_Sqlite____w64 int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("Microsoft.Data.Sqlite, Version=1.1.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60", "Microsoft.Data.Sqlite.Interop.NativeMethods+Sqlite3_sqlite3", "sqlite3_column_text")]
		public static global::System.IntPtr sqlite3_column_text(
					global::Microsoft.Data.Sqlite.Interop.Sqlite3StmtHandle__Microsoft_Data_Sqlite stmt, 
					int iCol)
		{
			// Setup
			bool addRefed = false;
			global::System.IntPtr unsafe___value;
			// Marshalling
			stmt.DangerousAddRef(ref addRefed);
			// Call to native method
			unsafe___value = global::__Interop.sqlite3_PInvokes.sqlite3_column_text(
								stmt.DangerousGetHandle(), 
								iCol
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			if (addRefed)
				stmt.DangerousRelease();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_column_type, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.Win32HandleMarshaller] Microsoft_Data_Sqlite_Interop_Sqlite3StmtHandle__Microsoft_Data_Sqlite____w64 int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("Microsoft.Data.Sqlite, Version=1.1.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60", "Microsoft.Data.Sqlite.Interop.NativeMethods+Sqlite3_sqlite3", "sqlite3_column_type")]
		public static int sqlite3_column_type(
					global::Microsoft.Data.Sqlite.Interop.Sqlite3StmtHandle__Microsoft_Data_Sqlite stmt, 
					int iCol)
		{
			// Setup
			bool addRefed = false;
			int unsafe___value;
			// Marshalling
			stmt.DangerousAddRef(ref addRefed);
			// Call to native method
			unsafe___value = global::__Interop.sqlite3_PInvokes.sqlite3_column_type(
								stmt.DangerousGetHandle(), 
								iCol
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			if (addRefed)
				stmt.DangerousRelease();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_db_filename, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, [fwd] [in] [Mcg.CodeGen.Win32HandleMarshaller] Microsoft_Data_Sqlite_Interop_Sqlite3Handle__Microsoft_Data_Sqlite____w64 int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("Microsoft.Data.Sqlite, Version=1.1.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60", "Microsoft.Data.Sqlite.Interop.NativeMethods+Sqlite3_sqlite3", "sqlite3_db_filename")]
		public static global::System.IntPtr sqlite3_db_filename(
					global::Microsoft.Data.Sqlite.Interop.Sqlite3Handle__Microsoft_Data_Sqlite db, 
					global::System.IntPtr zDbName)
		{
			// Setup
			bool addRefed = false;
			global::System.IntPtr unsafe___value;
			// Marshalling
			db.DangerousAddRef(ref addRefed);
			// Call to native method
			unsafe___value = global::__Interop.sqlite3_PInvokes.sqlite3_db_filename(
								db.DangerousGetHandle(), 
								zDbName
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			if (addRefed)
				db.DangerousRelease();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_enable_load_extension, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.Win32HandleMarshaller] Microsoft_Data_Sqlite_Interop_Sqlite3Handle__Microsoft_Data_Sqlite____w64 int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("Microsoft.Data.Sqlite, Version=1.1.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60", "Microsoft.Data.Sqlite.Interop.NativeMethods+Sqlite3_sqlite3", "sqlite3_enable_load_extension")]
		public static int sqlite3_enable_load_extension(
					global::Microsoft.Data.Sqlite.Interop.Sqlite3Handle__Microsoft_Data_Sqlite db, 
					int onoff)
		{
			// Setup
			bool addRefed = false;
			int unsafe___value;
			// Marshalling
			db.DangerousAddRef(ref addRefed);
			// Call to native method
			unsafe___value = global::__Interop.sqlite3_PInvokes.sqlite3_enable_load_extension(
								db.DangerousGetHandle(), 
								onoff
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			if (addRefed)
				db.DangerousRelease();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_errmsg, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, [fwd] [in] [Mcg.CodeGen.Win32HandleMarshaller] Microsoft_Data_Sqlite_Interop_Sqlite3Handle__Microsoft_Data_Sqlite____w64 int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("Microsoft.Data.Sqlite, Version=1.1.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60", "Microsoft.Data.Sqlite.Interop.NativeMethods+Sqlite3_sqlite3", "sqlite3_errmsg")]
		public static global::System.IntPtr sqlite3_errmsg(global::Microsoft.Data.Sqlite.Interop.Sqlite3Handle__Microsoft_Data_Sqlite db)
		{
			// Setup
			bool addRefed = false;
			global::System.IntPtr unsafe___value;
			// Marshalling
			db.DangerousAddRef(ref addRefed);
			// Call to native method
			unsafe___value = global::__Interop.sqlite3_PInvokes.sqlite3_errmsg(db.DangerousGetHandle());
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			if (addRefed)
				db.DangerousRelease();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_errstr, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("Microsoft.Data.Sqlite, Version=1.1.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60", "Microsoft.Data.Sqlite.Interop.NativeMethods+Sqlite3_sqlite3", "sqlite3_errstr")]
		public static global::System.IntPtr sqlite3_errstr(int rc)
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.sqlite3_PInvokes.sqlite3_errstr(rc);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_finalize, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("Microsoft.Data.Sqlite, Version=1.1.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60", "Microsoft.Data.Sqlite.Interop.NativeMethods+Sqlite3_sqlite3", "sqlite3_finalize")]
		public static int sqlite3_finalize(global::System.IntPtr pStmt)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.sqlite3_PInvokes.sqlite3_finalize(pStmt);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_libversion, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("Microsoft.Data.Sqlite, Version=1.1.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60", "Microsoft.Data.Sqlite.Interop.NativeMethods+Sqlite3_sqlite3", "sqlite3_libversion")]
		public static global::System.IntPtr sqlite3_libversion()
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.sqlite3_PInvokes.sqlite3_libversion();
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_open_v2, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.Win32HandleMarshaller] Microsoft_Data_Sqlite_Interop_Sqlite3Handle__Microsoft_Data_Sqlite____w64 int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("Microsoft.Data.Sqlite, Version=1.1.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60", "Microsoft.Data.Sqlite.Interop.NativeMethods+Sqlite3_sqlite3", "sqlite3_open_v2")]
		public static int sqlite3_open_v2(
					global::System.IntPtr filename, 
					out global::Microsoft.Data.Sqlite.Interop.Sqlite3Handle__Microsoft_Data_Sqlite ppDb, 
					int flags, 
					global::System.IntPtr vfs)
		{
			// Setup
			global::System.IntPtr unsafe_ppDb;
			int unsafe___value;
			// Marshalling
			ppDb = new global::Microsoft.Data.Sqlite.Interop.Sqlite3Handle__Microsoft_Data_Sqlite();
			unsafe_ppDb = ppDb.DangerousGetHandle();
			// Call to native method
			unsafe___value = global::__Interop.sqlite3_PInvokes.sqlite3_open_v2(
								filename, 
								&(unsafe_ppDb), 
								flags, 
								vfs
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.Runtime.InteropServices.McgMarshal.InitializeHandle(
								ppDb, 
								unsafe_ppDb
							);
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_prepare_v2, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.Win32HandleMarshaller] Microsoft_Data_Sqlite_Interop_Sqlite3Handle__Microsoft_Data_Sqlite____w64 int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.Win32HandleMarshaller] Microsoft_Data_Sqlite_Interop_Sqlite3StmtHandle__Microsoft_Data_Sqlite____w64 int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("Microsoft.Data.Sqlite, Version=1.1.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60", "Microsoft.Data.Sqlite.Interop.NativeMethods+Sqlite3_sqlite3", "sqlite3_prepare_v2")]
		public static int sqlite3_prepare_v2(
					global::Microsoft.Data.Sqlite.Interop.Sqlite3Handle__Microsoft_Data_Sqlite db, 
					global::System.IntPtr zSql, 
					int nByte, 
					out global::Microsoft.Data.Sqlite.Interop.Sqlite3StmtHandle__Microsoft_Data_Sqlite ppStmt, 
					out global::System.IntPtr pzTail)
		{
			// Setup
			bool addRefed = false;
			global::System.IntPtr unsafe_ppStmt;
			global::System.IntPtr unsafe_pzTail;
			int unsafe___value;
			// Marshalling
			db.DangerousAddRef(ref addRefed);
			ppStmt = new global::Microsoft.Data.Sqlite.Interop.Sqlite3StmtHandle__Microsoft_Data_Sqlite();
			unsafe_ppStmt = ppStmt.DangerousGetHandle();
			// Call to native method
			unsafe___value = global::__Interop.sqlite3_PInvokes.sqlite3_prepare_v2(
								db.DangerousGetHandle(), 
								zSql, 
								nByte, 
								&(unsafe_ppStmt), 
								&(unsafe_pzTail)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			pzTail = unsafe_pzTail;
			global::System.Runtime.InteropServices.McgMarshal.InitializeHandle(
								ppStmt, 
								unsafe_ppStmt
							);
			if (addRefed)
				db.DangerousRelease();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_reset, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.Win32HandleMarshaller] Microsoft_Data_Sqlite_Interop_Sqlite3StmtHandle__Microsoft_Data_Sqlite____w64 int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("Microsoft.Data.Sqlite, Version=1.1.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60", "Microsoft.Data.Sqlite.Interop.NativeMethods+Sqlite3_sqlite3", "sqlite3_reset")]
		public static int sqlite3_reset(global::Microsoft.Data.Sqlite.Interop.Sqlite3StmtHandle__Microsoft_Data_Sqlite stmt)
		{
			// Setup
			bool addRefed = false;
			int unsafe___value;
			// Marshalling
			stmt.DangerousAddRef(ref addRefed);
			// Call to native method
			unsafe___value = global::__Interop.sqlite3_PInvokes.sqlite3_reset(stmt.DangerousGetHandle());
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			if (addRefed)
				stmt.DangerousRelease();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_step, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.Win32HandleMarshaller] Microsoft_Data_Sqlite_Interop_Sqlite3StmtHandle__Microsoft_Data_Sqlite____w64 int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("Microsoft.Data.Sqlite, Version=1.1.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60", "Microsoft.Data.Sqlite.Interop.NativeMethods+Sqlite3_sqlite3", "sqlite3_step")]
		public static int sqlite3_step(global::Microsoft.Data.Sqlite.Interop.Sqlite3StmtHandle__Microsoft_Data_Sqlite stmt)
		{
			// Setup
			bool addRefed = false;
			int unsafe___value;
			// Marshalling
			stmt.DangerousAddRef(ref addRefed);
			// Call to native method
			unsafe___value = global::__Interop.sqlite3_PInvokes.sqlite3_step(stmt.DangerousGetHandle());
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			if (addRefed)
				stmt.DangerousRelease();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_stmt_readonly, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.Win32HandleMarshaller] Microsoft_Data_Sqlite_Interop_Sqlite3StmtHandle__Microsoft_Data_Sqlite____w64 int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("Microsoft.Data.Sqlite, Version=1.1.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60", "Microsoft.Data.Sqlite.Interop.NativeMethods+Sqlite3_sqlite3", "sqlite3_stmt_readonly")]
		public static int sqlite3_stmt_readonly(global::Microsoft.Data.Sqlite.Interop.Sqlite3StmtHandle__Microsoft_Data_Sqlite pStmt)
		{
			// Setup
			bool addRefed = false;
			int unsafe___value;
			// Marshalling
			pStmt.DangerousAddRef(ref addRefed);
			// Call to native method
			unsafe___value = global::__Interop.sqlite3_PInvokes.sqlite3_stmt_readonly(pStmt.DangerousGetHandle());
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			if (addRefed)
				pStmt.DangerousRelease();
			// Return
			return unsafe___value;
		}
	}

	/// <summary>
	/// P/Invoke class for module 'winsqlite3.dll'
	/// </summary>
	public unsafe static partial class winsqlite3_dll
	{
		// Signature, sqlite3_bind_blob, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.Win32HandleMarshaller] Microsoft_Data_Sqlite_Interop_Sqlite3StmtHandle__Microsoft_Data_Sqlite____w64 int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableArrayMarshaller] rg_byte__unsigned char *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("Microsoft.Data.Sqlite, Version=1.1.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60", "Microsoft.Data.Sqlite.Interop.NativeMethods+Sqlite3_winsqlite3", "sqlite3_bind_blob")]
		public static int sqlite3_bind_blob(
					global::Microsoft.Data.Sqlite.Interop.Sqlite3StmtHandle__Microsoft_Data_Sqlite pStmt, 
					int i, 
					byte[] zData, 
					int nData, 
					global::System.IntPtr xDel)
		{
			// Setup
			bool addRefed = false;
			byte* unsafe_zData;
			int unsafe___value;
			// Marshalling
			pStmt.DangerousAddRef(ref addRefed);
			fixed (byte* pinned_zData = global::__Interop.McgHelpers.GetArrayForCompat(zData))
			{
				unsafe_zData = (byte*)pinned_zData;
				// Call to native method
				unsafe___value = global::__Interop.winsqlite3_dll_PInvokes.sqlite3_bind_blob(
									pStmt.DangerousGetHandle(), 
									i, 
									unsafe_zData, 
									nData, 
									xDel
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			}
			if (addRefed)
				pStmt.DangerousRelease();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_bind_double, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.Win32HandleMarshaller] Microsoft_Data_Sqlite_Interop_Sqlite3StmtHandle__Microsoft_Data_Sqlite____w64 int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] double__double, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("Microsoft.Data.Sqlite, Version=1.1.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60", "Microsoft.Data.Sqlite.Interop.NativeMethods+Sqlite3_winsqlite3", "sqlite3_bind_double")]
		public static int sqlite3_bind_double(
					global::Microsoft.Data.Sqlite.Interop.Sqlite3StmtHandle__Microsoft_Data_Sqlite pStmt, 
					int i, 
					double rValue)
		{
			// Setup
			bool addRefed = false;
			int unsafe___value;
			// Marshalling
			pStmt.DangerousAddRef(ref addRefed);
			// Call to native method
			unsafe___value = global::__Interop.winsqlite3_dll_PInvokes.sqlite3_bind_double(
								pStmt.DangerousGetHandle(), 
								i, 
								rValue
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			if (addRefed)
				pStmt.DangerousRelease();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_bind_int64, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.Win32HandleMarshaller] Microsoft_Data_Sqlite_Interop_Sqlite3StmtHandle__Microsoft_Data_Sqlite____w64 int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] long____int64, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("Microsoft.Data.Sqlite, Version=1.1.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60", "Microsoft.Data.Sqlite.Interop.NativeMethods+Sqlite3_winsqlite3", "sqlite3_bind_int64")]
		public static int sqlite3_bind_int64(
					global::Microsoft.Data.Sqlite.Interop.Sqlite3StmtHandle__Microsoft_Data_Sqlite pStmt, 
					int i, 
					long iValue)
		{
			// Setup
			bool addRefed = false;
			int unsafe___value;
			// Marshalling
			pStmt.DangerousAddRef(ref addRefed);
			// Call to native method
			unsafe___value = global::__Interop.winsqlite3_dll_PInvokes.sqlite3_bind_int64(
								pStmt.DangerousGetHandle(), 
								i, 
								iValue
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			if (addRefed)
				pStmt.DangerousRelease();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_bind_null, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.Win32HandleMarshaller] Microsoft_Data_Sqlite_Interop_Sqlite3StmtHandle__Microsoft_Data_Sqlite____w64 int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("Microsoft.Data.Sqlite, Version=1.1.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60", "Microsoft.Data.Sqlite.Interop.NativeMethods+Sqlite3_winsqlite3", "sqlite3_bind_null")]
		public static int sqlite3_bind_null(
					global::Microsoft.Data.Sqlite.Interop.Sqlite3StmtHandle__Microsoft_Data_Sqlite pStmt, 
					int i)
		{
			// Setup
			bool addRefed = false;
			int unsafe___value;
			// Marshalling
			pStmt.DangerousAddRef(ref addRefed);
			// Call to native method
			unsafe___value = global::__Interop.winsqlite3_dll_PInvokes.sqlite3_bind_null(
								pStmt.DangerousGetHandle(), 
								i
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			if (addRefed)
				pStmt.DangerousRelease();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_bind_parameter_count, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.Win32HandleMarshaller] Microsoft_Data_Sqlite_Interop_Sqlite3StmtHandle__Microsoft_Data_Sqlite____w64 int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("Microsoft.Data.Sqlite, Version=1.1.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60", "Microsoft.Data.Sqlite.Interop.NativeMethods+Sqlite3_winsqlite3", "sqlite3_bind_parameter_count")]
		public static int sqlite3_bind_parameter_count(global::Microsoft.Data.Sqlite.Interop.Sqlite3StmtHandle__Microsoft_Data_Sqlite stmt)
		{
			// Setup
			bool addRefed = false;
			int unsafe___value;
			// Marshalling
			stmt.DangerousAddRef(ref addRefed);
			// Call to native method
			unsafe___value = global::__Interop.winsqlite3_dll_PInvokes.sqlite3_bind_parameter_count(stmt.DangerousGetHandle());
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			if (addRefed)
				stmt.DangerousRelease();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_bind_parameter_index, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.Win32HandleMarshaller] Microsoft_Data_Sqlite_Interop_Sqlite3StmtHandle__Microsoft_Data_Sqlite____w64 int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("Microsoft.Data.Sqlite, Version=1.1.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60", "Microsoft.Data.Sqlite.Interop.NativeMethods+Sqlite3_winsqlite3", "sqlite3_bind_parameter_index")]
		public static int sqlite3_bind_parameter_index(
					global::Microsoft.Data.Sqlite.Interop.Sqlite3StmtHandle__Microsoft_Data_Sqlite pStmt, 
					global::System.IntPtr zName)
		{
			// Setup
			bool addRefed = false;
			int unsafe___value;
			// Marshalling
			pStmt.DangerousAddRef(ref addRefed);
			// Call to native method
			unsafe___value = global::__Interop.winsqlite3_dll_PInvokes.sqlite3_bind_parameter_index(
								pStmt.DangerousGetHandle(), 
								zName
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			if (addRefed)
				pStmt.DangerousRelease();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_bind_parameter_name, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, [fwd] [in] [Mcg.CodeGen.Win32HandleMarshaller] Microsoft_Data_Sqlite_Interop_Sqlite3StmtHandle__Microsoft_Data_Sqlite____w64 int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("Microsoft.Data.Sqlite, Version=1.1.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60", "Microsoft.Data.Sqlite.Interop.NativeMethods+Sqlite3_winsqlite3", "sqlite3_bind_parameter_name")]
		public static global::System.IntPtr sqlite3_bind_parameter_name(
					global::Microsoft.Data.Sqlite.Interop.Sqlite3StmtHandle__Microsoft_Data_Sqlite stmt, 
					int i)
		{
			// Setup
			bool addRefed = false;
			global::System.IntPtr unsafe___value;
			// Marshalling
			stmt.DangerousAddRef(ref addRefed);
			// Call to native method
			unsafe___value = global::__Interop.winsqlite3_dll_PInvokes.sqlite3_bind_parameter_name(
								stmt.DangerousGetHandle(), 
								i
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			if (addRefed)
				stmt.DangerousRelease();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_bind_text, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.Win32HandleMarshaller] Microsoft_Data_Sqlite_Interop_Sqlite3StmtHandle__Microsoft_Data_Sqlite____w64 int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("Microsoft.Data.Sqlite, Version=1.1.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60", "Microsoft.Data.Sqlite.Interop.NativeMethods+Sqlite3_winsqlite3", "sqlite3_bind_text")]
		public static int sqlite3_bind_text(
					global::Microsoft.Data.Sqlite.Interop.Sqlite3StmtHandle__Microsoft_Data_Sqlite pStmt, 
					int i, 
					global::System.IntPtr zData, 
					int n, 
					global::System.IntPtr xDel)
		{
			// Setup
			bool addRefed = false;
			int unsafe___value;
			// Marshalling
			pStmt.DangerousAddRef(ref addRefed);
			// Call to native method
			unsafe___value = global::__Interop.winsqlite3_dll_PInvokes.sqlite3_bind_text(
								pStmt.DangerousGetHandle(), 
								i, 
								zData, 
								n, 
								xDel
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			if (addRefed)
				pStmt.DangerousRelease();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_busy_timeout, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.Win32HandleMarshaller] Microsoft_Data_Sqlite_Interop_Sqlite3Handle__Microsoft_Data_Sqlite____w64 int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("Microsoft.Data.Sqlite, Version=1.1.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60", "Microsoft.Data.Sqlite.Interop.NativeMethods+Sqlite3_winsqlite3", "sqlite3_busy_timeout")]
		public static int sqlite3_busy_timeout(
					global::Microsoft.Data.Sqlite.Interop.Sqlite3Handle__Microsoft_Data_Sqlite db, 
					int ms)
		{
			// Setup
			bool addRefed = false;
			int unsafe___value;
			// Marshalling
			db.DangerousAddRef(ref addRefed);
			// Call to native method
			unsafe___value = global::__Interop.winsqlite3_dll_PInvokes.sqlite3_busy_timeout(
								db.DangerousGetHandle(), 
								ms
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			if (addRefed)
				db.DangerousRelease();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_changes, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.Win32HandleMarshaller] Microsoft_Data_Sqlite_Interop_Sqlite3Handle__Microsoft_Data_Sqlite____w64 int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("Microsoft.Data.Sqlite, Version=1.1.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60", "Microsoft.Data.Sqlite.Interop.NativeMethods+Sqlite3_winsqlite3", "sqlite3_changes")]
		public static int sqlite3_changes(global::Microsoft.Data.Sqlite.Interop.Sqlite3Handle__Microsoft_Data_Sqlite db)
		{
			// Setup
			bool addRefed = false;
			int unsafe___value;
			// Marshalling
			db.DangerousAddRef(ref addRefed);
			// Call to native method
			unsafe___value = global::__Interop.winsqlite3_dll_PInvokes.sqlite3_changes(db.DangerousGetHandle());
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			if (addRefed)
				db.DangerousRelease();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_close, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("Microsoft.Data.Sqlite, Version=1.1.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60", "Microsoft.Data.Sqlite.Interop.NativeMethods+Sqlite3_winsqlite3", "sqlite3_close")]
		public static int sqlite3_close(global::System.IntPtr db)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.winsqlite3_dll_PInvokes.sqlite3_close(db);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_close_v2, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("Microsoft.Data.Sqlite, Version=1.1.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60", "Microsoft.Data.Sqlite.Interop.NativeMethods+Sqlite3_winsqlite3", "sqlite3_close_v2")]
		public static int sqlite3_close_v2(global::System.IntPtr db)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.winsqlite3_dll_PInvokes.sqlite3_close_v2(db);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_column_blob, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, [fwd] [in] [Mcg.CodeGen.Win32HandleMarshaller] Microsoft_Data_Sqlite_Interop_Sqlite3StmtHandle__Microsoft_Data_Sqlite____w64 int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("Microsoft.Data.Sqlite, Version=1.1.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60", "Microsoft.Data.Sqlite.Interop.NativeMethods+Sqlite3_winsqlite3", "sqlite3_column_blob")]
		public static global::System.IntPtr sqlite3_column_blob(
					global::Microsoft.Data.Sqlite.Interop.Sqlite3StmtHandle__Microsoft_Data_Sqlite pStmt, 
					int iCol)
		{
			// Setup
			bool addRefed = false;
			global::System.IntPtr unsafe___value;
			// Marshalling
			pStmt.DangerousAddRef(ref addRefed);
			// Call to native method
			unsafe___value = global::__Interop.winsqlite3_dll_PInvokes.sqlite3_column_blob(
								pStmt.DangerousGetHandle(), 
								iCol
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			if (addRefed)
				pStmt.DangerousRelease();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_column_bytes, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.Win32HandleMarshaller] Microsoft_Data_Sqlite_Interop_Sqlite3StmtHandle__Microsoft_Data_Sqlite____w64 int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("Microsoft.Data.Sqlite, Version=1.1.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60", "Microsoft.Data.Sqlite.Interop.NativeMethods+Sqlite3_winsqlite3", "sqlite3_column_bytes")]
		public static int sqlite3_column_bytes(
					global::Microsoft.Data.Sqlite.Interop.Sqlite3StmtHandle__Microsoft_Data_Sqlite pStmt, 
					int iCol)
		{
			// Setup
			bool addRefed = false;
			int unsafe___value;
			// Marshalling
			pStmt.DangerousAddRef(ref addRefed);
			// Call to native method
			unsafe___value = global::__Interop.winsqlite3_dll_PInvokes.sqlite3_column_bytes(
								pStmt.DangerousGetHandle(), 
								iCol
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			if (addRefed)
				pStmt.DangerousRelease();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_column_count, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.Win32HandleMarshaller] Microsoft_Data_Sqlite_Interop_Sqlite3StmtHandle__Microsoft_Data_Sqlite____w64 int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("Microsoft.Data.Sqlite, Version=1.1.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60", "Microsoft.Data.Sqlite.Interop.NativeMethods+Sqlite3_winsqlite3", "sqlite3_column_count")]
		public static int sqlite3_column_count(global::Microsoft.Data.Sqlite.Interop.Sqlite3StmtHandle__Microsoft_Data_Sqlite stmt)
		{
			// Setup
			bool addRefed = false;
			int unsafe___value;
			// Marshalling
			stmt.DangerousAddRef(ref addRefed);
			// Call to native method
			unsafe___value = global::__Interop.winsqlite3_dll_PInvokes.sqlite3_column_count(stmt.DangerousGetHandle());
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			if (addRefed)
				stmt.DangerousRelease();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_column_decltype, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, [fwd] [in] [Mcg.CodeGen.Win32HandleMarshaller] Microsoft_Data_Sqlite_Interop_Sqlite3StmtHandle__Microsoft_Data_Sqlite____w64 int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("Microsoft.Data.Sqlite, Version=1.1.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60", "Microsoft.Data.Sqlite.Interop.NativeMethods+Sqlite3_winsqlite3", "sqlite3_column_decltype")]
		public static global::System.IntPtr sqlite3_column_decltype(
					global::Microsoft.Data.Sqlite.Interop.Sqlite3StmtHandle__Microsoft_Data_Sqlite stmt, 
					int iCol)
		{
			// Setup
			bool addRefed = false;
			global::System.IntPtr unsafe___value;
			// Marshalling
			stmt.DangerousAddRef(ref addRefed);
			// Call to native method
			unsafe___value = global::__Interop.winsqlite3_dll_PInvokes.sqlite3_column_decltype(
								stmt.DangerousGetHandle(), 
								iCol
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			if (addRefed)
				stmt.DangerousRelease();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_column_double, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] double__double, [fwd] [in] [Mcg.CodeGen.Win32HandleMarshaller] Microsoft_Data_Sqlite_Interop_Sqlite3StmtHandle__Microsoft_Data_Sqlite____w64 int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("Microsoft.Data.Sqlite, Version=1.1.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60", "Microsoft.Data.Sqlite.Interop.NativeMethods+Sqlite3_winsqlite3", "sqlite3_column_double")]
		public static double sqlite3_column_double(
					global::Microsoft.Data.Sqlite.Interop.Sqlite3StmtHandle__Microsoft_Data_Sqlite stmt, 
					int iCol)
		{
			// Setup
			bool addRefed = false;
			double unsafe___value;
			// Marshalling
			stmt.DangerousAddRef(ref addRefed);
			// Call to native method
			unsafe___value = global::__Interop.winsqlite3_dll_PInvokes.sqlite3_column_double(
								stmt.DangerousGetHandle(), 
								iCol
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			if (addRefed)
				stmt.DangerousRelease();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_column_int64, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] long____int64, [fwd] [in] [Mcg.CodeGen.Win32HandleMarshaller] Microsoft_Data_Sqlite_Interop_Sqlite3StmtHandle__Microsoft_Data_Sqlite____w64 int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("Microsoft.Data.Sqlite, Version=1.1.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60", "Microsoft.Data.Sqlite.Interop.NativeMethods+Sqlite3_winsqlite3", "sqlite3_column_int64")]
		public static long sqlite3_column_int64(
					global::Microsoft.Data.Sqlite.Interop.Sqlite3StmtHandle__Microsoft_Data_Sqlite stmt, 
					int iCol)
		{
			// Setup
			bool addRefed = false;
			long unsafe___value;
			// Marshalling
			stmt.DangerousAddRef(ref addRefed);
			// Call to native method
			unsafe___value = global::__Interop.winsqlite3_dll_PInvokes.sqlite3_column_int64(
								stmt.DangerousGetHandle(), 
								iCol
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			if (addRefed)
				stmt.DangerousRelease();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_column_name, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, [fwd] [in] [Mcg.CodeGen.Win32HandleMarshaller] Microsoft_Data_Sqlite_Interop_Sqlite3StmtHandle__Microsoft_Data_Sqlite____w64 int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("Microsoft.Data.Sqlite, Version=1.1.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60", "Microsoft.Data.Sqlite.Interop.NativeMethods+Sqlite3_winsqlite3", "sqlite3_column_name")]
		public static global::System.IntPtr sqlite3_column_name(
					global::Microsoft.Data.Sqlite.Interop.Sqlite3StmtHandle__Microsoft_Data_Sqlite stmt, 
					int iCol)
		{
			// Setup
			bool addRefed = false;
			global::System.IntPtr unsafe___value;
			// Marshalling
			stmt.DangerousAddRef(ref addRefed);
			// Call to native method
			unsafe___value = global::__Interop.winsqlite3_dll_PInvokes.sqlite3_column_name(
								stmt.DangerousGetHandle(), 
								iCol
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			if (addRefed)
				stmt.DangerousRelease();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_column_text, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, [fwd] [in] [Mcg.CodeGen.Win32HandleMarshaller] Microsoft_Data_Sqlite_Interop_Sqlite3StmtHandle__Microsoft_Data_Sqlite____w64 int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("Microsoft.Data.Sqlite, Version=1.1.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60", "Microsoft.Data.Sqlite.Interop.NativeMethods+Sqlite3_winsqlite3", "sqlite3_column_text")]
		public static global::System.IntPtr sqlite3_column_text(
					global::Microsoft.Data.Sqlite.Interop.Sqlite3StmtHandle__Microsoft_Data_Sqlite stmt, 
					int iCol)
		{
			// Setup
			bool addRefed = false;
			global::System.IntPtr unsafe___value;
			// Marshalling
			stmt.DangerousAddRef(ref addRefed);
			// Call to native method
			unsafe___value = global::__Interop.winsqlite3_dll_PInvokes.sqlite3_column_text(
								stmt.DangerousGetHandle(), 
								iCol
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			if (addRefed)
				stmt.DangerousRelease();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_column_type, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.Win32HandleMarshaller] Microsoft_Data_Sqlite_Interop_Sqlite3StmtHandle__Microsoft_Data_Sqlite____w64 int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("Microsoft.Data.Sqlite, Version=1.1.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60", "Microsoft.Data.Sqlite.Interop.NativeMethods+Sqlite3_winsqlite3", "sqlite3_column_type")]
		public static int sqlite3_column_type(
					global::Microsoft.Data.Sqlite.Interop.Sqlite3StmtHandle__Microsoft_Data_Sqlite stmt, 
					int iCol)
		{
			// Setup
			bool addRefed = false;
			int unsafe___value;
			// Marshalling
			stmt.DangerousAddRef(ref addRefed);
			// Call to native method
			unsafe___value = global::__Interop.winsqlite3_dll_PInvokes.sqlite3_column_type(
								stmt.DangerousGetHandle(), 
								iCol
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			if (addRefed)
				stmt.DangerousRelease();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_db_filename, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, [fwd] [in] [Mcg.CodeGen.Win32HandleMarshaller] Microsoft_Data_Sqlite_Interop_Sqlite3Handle__Microsoft_Data_Sqlite____w64 int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("Microsoft.Data.Sqlite, Version=1.1.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60", "Microsoft.Data.Sqlite.Interop.NativeMethods+Sqlite3_winsqlite3", "sqlite3_db_filename")]
		public static global::System.IntPtr sqlite3_db_filename(
					global::Microsoft.Data.Sqlite.Interop.Sqlite3Handle__Microsoft_Data_Sqlite db, 
					global::System.IntPtr zDbName)
		{
			// Setup
			bool addRefed = false;
			global::System.IntPtr unsafe___value;
			// Marshalling
			db.DangerousAddRef(ref addRefed);
			// Call to native method
			unsafe___value = global::__Interop.winsqlite3_dll_PInvokes.sqlite3_db_filename(
								db.DangerousGetHandle(), 
								zDbName
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			if (addRefed)
				db.DangerousRelease();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_enable_load_extension, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.Win32HandleMarshaller] Microsoft_Data_Sqlite_Interop_Sqlite3Handle__Microsoft_Data_Sqlite____w64 int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("Microsoft.Data.Sqlite, Version=1.1.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60", "Microsoft.Data.Sqlite.Interop.NativeMethods+Sqlite3_winsqlite3", "sqlite3_enable_load_extension")]
		public static int sqlite3_enable_load_extension(
					global::Microsoft.Data.Sqlite.Interop.Sqlite3Handle__Microsoft_Data_Sqlite db, 
					int onoff)
		{
			// Setup
			bool addRefed = false;
			int unsafe___value;
			// Marshalling
			db.DangerousAddRef(ref addRefed);
			// Call to native method
			unsafe___value = global::__Interop.winsqlite3_dll_PInvokes.sqlite3_enable_load_extension(
								db.DangerousGetHandle(), 
								onoff
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			if (addRefed)
				db.DangerousRelease();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_errmsg, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, [fwd] [in] [Mcg.CodeGen.Win32HandleMarshaller] Microsoft_Data_Sqlite_Interop_Sqlite3Handle__Microsoft_Data_Sqlite____w64 int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("Microsoft.Data.Sqlite, Version=1.1.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60", "Microsoft.Data.Sqlite.Interop.NativeMethods+Sqlite3_winsqlite3", "sqlite3_errmsg")]
		public static global::System.IntPtr sqlite3_errmsg(global::Microsoft.Data.Sqlite.Interop.Sqlite3Handle__Microsoft_Data_Sqlite db)
		{
			// Setup
			bool addRefed = false;
			global::System.IntPtr unsafe___value;
			// Marshalling
			db.DangerousAddRef(ref addRefed);
			// Call to native method
			unsafe___value = global::__Interop.winsqlite3_dll_PInvokes.sqlite3_errmsg(db.DangerousGetHandle());
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			if (addRefed)
				db.DangerousRelease();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_errstr, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("Microsoft.Data.Sqlite, Version=1.1.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60", "Microsoft.Data.Sqlite.Interop.NativeMethods+Sqlite3_winsqlite3", "sqlite3_errstr")]
		public static global::System.IntPtr sqlite3_errstr(int rc)
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.winsqlite3_dll_PInvokes.sqlite3_errstr(rc);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_finalize, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("Microsoft.Data.Sqlite, Version=1.1.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60", "Microsoft.Data.Sqlite.Interop.NativeMethods+Sqlite3_winsqlite3", "sqlite3_finalize")]
		public static int sqlite3_finalize(global::System.IntPtr pStmt)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.winsqlite3_dll_PInvokes.sqlite3_finalize(pStmt);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_libversion, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("Microsoft.Data.Sqlite, Version=1.1.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60", "Microsoft.Data.Sqlite.Interop.NativeMethods+Sqlite3_winsqlite3", "sqlite3_libversion")]
		public static global::System.IntPtr sqlite3_libversion()
		{
			// Setup
			global::System.IntPtr unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.winsqlite3_dll_PInvokes.sqlite3_libversion();
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_open_v2, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.Win32HandleMarshaller] Microsoft_Data_Sqlite_Interop_Sqlite3Handle__Microsoft_Data_Sqlite____w64 int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("Microsoft.Data.Sqlite, Version=1.1.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60", "Microsoft.Data.Sqlite.Interop.NativeMethods+Sqlite3_winsqlite3", "sqlite3_open_v2")]
		public static int sqlite3_open_v2(
					global::System.IntPtr filename, 
					out global::Microsoft.Data.Sqlite.Interop.Sqlite3Handle__Microsoft_Data_Sqlite ppDb, 
					int flags, 
					global::System.IntPtr vfs)
		{
			// Setup
			global::System.IntPtr unsafe_ppDb;
			int unsafe___value;
			// Marshalling
			ppDb = new global::Microsoft.Data.Sqlite.Interop.Sqlite3Handle__Microsoft_Data_Sqlite();
			unsafe_ppDb = ppDb.DangerousGetHandle();
			// Call to native method
			unsafe___value = global::__Interop.winsqlite3_dll_PInvokes.sqlite3_open_v2(
								filename, 
								&(unsafe_ppDb), 
								flags, 
								vfs
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.Runtime.InteropServices.McgMarshal.InitializeHandle(
								ppDb, 
								unsafe_ppDb
							);
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_prepare_v2, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.Win32HandleMarshaller] Microsoft_Data_Sqlite_Interop_Sqlite3Handle__Microsoft_Data_Sqlite____w64 int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.Win32HandleMarshaller] Microsoft_Data_Sqlite_Interop_Sqlite3StmtHandle__Microsoft_Data_Sqlite____w64 int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("Microsoft.Data.Sqlite, Version=1.1.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60", "Microsoft.Data.Sqlite.Interop.NativeMethods+Sqlite3_winsqlite3", "sqlite3_prepare_v2")]
		public static int sqlite3_prepare_v2(
					global::Microsoft.Data.Sqlite.Interop.Sqlite3Handle__Microsoft_Data_Sqlite db, 
					global::System.IntPtr zSql, 
					int nByte, 
					out global::Microsoft.Data.Sqlite.Interop.Sqlite3StmtHandle__Microsoft_Data_Sqlite ppStmt, 
					out global::System.IntPtr pzTail)
		{
			// Setup
			bool addRefed = false;
			global::System.IntPtr unsafe_ppStmt;
			global::System.IntPtr unsafe_pzTail;
			int unsafe___value;
			// Marshalling
			db.DangerousAddRef(ref addRefed);
			ppStmt = new global::Microsoft.Data.Sqlite.Interop.Sqlite3StmtHandle__Microsoft_Data_Sqlite();
			unsafe_ppStmt = ppStmt.DangerousGetHandle();
			// Call to native method
			unsafe___value = global::__Interop.winsqlite3_dll_PInvokes.sqlite3_prepare_v2(
								db.DangerousGetHandle(), 
								zSql, 
								nByte, 
								&(unsafe_ppStmt), 
								&(unsafe_pzTail)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			pzTail = unsafe_pzTail;
			global::System.Runtime.InteropServices.McgMarshal.InitializeHandle(
								ppStmt, 
								unsafe_ppStmt
							);
			if (addRefed)
				db.DangerousRelease();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_reset, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.Win32HandleMarshaller] Microsoft_Data_Sqlite_Interop_Sqlite3StmtHandle__Microsoft_Data_Sqlite____w64 int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("Microsoft.Data.Sqlite, Version=1.1.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60", "Microsoft.Data.Sqlite.Interop.NativeMethods+Sqlite3_winsqlite3", "sqlite3_reset")]
		public static int sqlite3_reset(global::Microsoft.Data.Sqlite.Interop.Sqlite3StmtHandle__Microsoft_Data_Sqlite stmt)
		{
			// Setup
			bool addRefed = false;
			int unsafe___value;
			// Marshalling
			stmt.DangerousAddRef(ref addRefed);
			// Call to native method
			unsafe___value = global::__Interop.winsqlite3_dll_PInvokes.sqlite3_reset(stmt.DangerousGetHandle());
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			if (addRefed)
				stmt.DangerousRelease();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_step, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.Win32HandleMarshaller] Microsoft_Data_Sqlite_Interop_Sqlite3StmtHandle__Microsoft_Data_Sqlite____w64 int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("Microsoft.Data.Sqlite, Version=1.1.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60", "Microsoft.Data.Sqlite.Interop.NativeMethods+Sqlite3_winsqlite3", "sqlite3_step")]
		public static int sqlite3_step(global::Microsoft.Data.Sqlite.Interop.Sqlite3StmtHandle__Microsoft_Data_Sqlite stmt)
		{
			// Setup
			bool addRefed = false;
			int unsafe___value;
			// Marshalling
			stmt.DangerousAddRef(ref addRefed);
			// Call to native method
			unsafe___value = global::__Interop.winsqlite3_dll_PInvokes.sqlite3_step(stmt.DangerousGetHandle());
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			if (addRefed)
				stmt.DangerousRelease();
			// Return
			return unsafe___value;
		}

		// Signature, sqlite3_stmt_readonly, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.Win32HandleMarshaller] Microsoft_Data_Sqlite_Interop_Sqlite3StmtHandle__Microsoft_Data_Sqlite____w64 int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("Microsoft.Data.Sqlite, Version=1.1.1.0, Culture=neutral, PublicKeyToken=adb9793829ddae60", "Microsoft.Data.Sqlite.Interop.NativeMethods+Sqlite3_winsqlite3", "sqlite3_stmt_readonly")]
		public static int sqlite3_stmt_readonly(global::Microsoft.Data.Sqlite.Interop.Sqlite3StmtHandle__Microsoft_Data_Sqlite pStmt)
		{
			// Setup
			bool addRefed = false;
			int unsafe___value;
			// Marshalling
			pStmt.DangerousAddRef(ref addRefed);
			// Call to native method
			unsafe___value = global::__Interop.winsqlite3_dll_PInvokes.sqlite3_stmt_readonly(pStmt.DangerousGetHandle());
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			if (addRefed)
				pStmt.DangerousRelease();
			// Return
			return unsafe___value;
		}
	}

	/// <summary>
	/// P/Invoke class for module '[MRT]'
	/// </summary>
	public unsafe static partial class _MRT_
	{
		// Signature, RhWaitForPendingFinalizers, [fwd] [return] [Mcg.CodeGen.VoidReturnMarshaller] void__void, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Runtime.RuntimeImports", "RhWaitForPendingFinalizers")]
		public static void RhWaitForPendingFinalizers(int allowReentrantWait)
		{
			// Marshalling
			// Call to native method
			global::__Interop._MRT__PInvokes.RhWaitForPendingFinalizers(allowReentrantWait);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, _RhYield, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Runtime.RuntimeImports", "_RhYield")]
		public static int _RhYield()
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop._MRT__PInvokes._RhYield();
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, RhCompatibleReentrantWaitAny, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr___ptr__w64 int *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Runtime.RuntimeImports", "RhCompatibleReentrantWaitAny")]
		public static int RhCompatibleReentrantWaitAny(
					int alertable, 
					int timeout, 
					int count, 
					global::System.IntPtr* handles)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop._MRT__PInvokes.RhCompatibleReentrantWaitAny(
								alertable, 
								timeout, 
								count, 
								((global::System.IntPtr*)handles)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, _ecvt_s, [fwd] [return] [Mcg.CodeGen.VoidReturnMarshaller] void__void, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] byte___ptrunsigned char *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] double__double, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int___ptrint *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int___ptrint *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Runtime.RuntimeImports", "_ecvt_s")]
		public static void _ecvt_s(
					byte* buffer, 
					int sizeInBytes, 
					double value, 
					int count, 
					int* dec, 
					int* sign)
		{
			// Marshalling
			// Call to native method
			global::__Interop._MRT__PInvokes._ecvt_s(
								((byte*)buffer), 
								sizeInBytes, 
								value, 
								count, 
								((int*)dec), 
								((int*)sign)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, memmove, [fwd] [return] [Mcg.CodeGen.VoidReturnMarshaller] void__void, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] byte___ptrunsigned char *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] byte___ptrunsigned char *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Runtime.RuntimeImports", "memmove")]
		public static void memmove(
					byte* dmem, 
					byte* smem, 
					uint size)
		{
			// Marshalling
			// Call to native method
			global::__Interop._MRT__PInvokes.memmove(
								((byte*)dmem), 
								((byte*)smem), 
								size
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}
	}

	/// <summary>
	/// P/Invoke class for module '*'
	/// </summary>
	public unsafe static partial class _
	{
		// Signature, CallingConventionConverter_GetStubs, [fwd] [return] [Mcg.CodeGen.VoidReturnMarshaller] void__void, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.TypeLoader, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "Internal.Runtime.TypeLoader.CallConverterThunk", "CallingConventionConverter_GetStubs")]
		public static void CallingConventionConverter_GetStubs(
					out global::System.IntPtr returnVoidStub, 
					out global::System.IntPtr returnIntegerStub, 
					out global::System.IntPtr commonStub, 
					out global::System.IntPtr returnFloatingPointReturn4Thunk, 
					out global::System.IntPtr returnFloatingPointReturn8Thunk)
		{
			// Setup
			global::System.IntPtr unsafe_returnVoidStub;
			global::System.IntPtr unsafe_returnIntegerStub;
			global::System.IntPtr unsafe_commonStub;
			global::System.IntPtr unsafe_returnFloatingPointReturn4Thunk;
			global::System.IntPtr unsafe_returnFloatingPointReturn8Thunk;
			// Marshalling
			// Call to native method
			global::__Interop.__PInvokes.CallingConventionConverter_GetStubs(
								&(unsafe_returnVoidStub), 
								&(unsafe_returnIntegerStub), 
								&(unsafe_commonStub), 
								&(unsafe_returnFloatingPointReturn4Thunk), 
								&(unsafe_returnFloatingPointReturn8Thunk)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			returnFloatingPointReturn8Thunk = unsafe_returnFloatingPointReturn8Thunk;
			returnFloatingPointReturn4Thunk = unsafe_returnFloatingPointReturn4Thunk;
			commonStub = unsafe_commonStub;
			returnIntegerStub = unsafe_returnIntegerStub;
			returnVoidStub = unsafe_returnVoidStub;
			// Return
		}
	}

	/// <summary>
	/// P/Invoke class for module 'api-ms-win-core-errorhandling-l1-1-0.dll'
	/// </summary>
	public unsafe static partial class api_ms_win_core_errorhandling_l1_1_0_dll
	{
		// Signature, GetLastError, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Runtime.Extensions, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "Interop+mincore", "GetLastError")]
		public static int GetLastError()
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.api_ms_win_core_errorhandling_l1_1_0_dll_PInvokes.GetLastError();
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}
	}

	/// <summary>
	/// P/Invoke class for module 'api-ms-win-core-winrt-l1-1-0.dll'
	/// </summary>
	public unsafe static partial class api_ms_win_core_winrt_l1_1_0_dll
	{
		// Signature, RoInitialize, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.WinRTInterop.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089", "mincore+mincore_PInvokes", "RoInitialize")]
		public static int RoInitialize(uint initType)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.api_ms_win_core_winrt_l1_1_0_dll_PInvokes.RoInitialize(initType);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}
	}

	/// <summary>
	/// P/Invoke class for module 'api-ms-win-core-localization-l1-2-0.dll'
	/// </summary>
	public unsafe static partial class api_ms_win_core_localization_l1_2_0_dll
	{
		// Signature, IsValidLocaleName, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] char___ptrwchar_t *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.WinRTInterop.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089", "mincore+mincore_PInvokes", "IsValidLocaleName")]
		public static int IsValidLocaleName(char* lpLocaleName)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.api_ms_win_core_localization_l1_2_0_dll_PInvokes.IsValidLocaleName(((ushort*)lpLocaleName));
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, ResolveLocaleName, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] char___ptrwchar_t *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] char___ptrwchar_t *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.WinRTInterop.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089", "mincore+mincore_PInvokes", "ResolveLocaleName")]
		public static int ResolveLocaleName(
					char* lpNameToResolve, 
					char* lpLocaleName, 
					int cchLocaleName)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.api_ms_win_core_localization_l1_2_0_dll_PInvokes.ResolveLocaleName(
								((ushort*)lpNameToResolve), 
								((ushort*)lpLocaleName), 
								cchLocaleName
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}

		// Signature, GetCPInfoExW, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Interop_mincore_CPINFOEXW__System_Text_Encoding_CodePages___ptr__Interop_mincore_CPINFOEXW__System_Text_Encoding_CodePages *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Text.Encoding.CodePages, Version=4.0.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "Interop+mincore", "GetCPInfoExW")]
		public static int GetCPInfoExW(
					uint CodePage, 
					uint dwFlags, 
					global::Interop_mincore_CPINFOEXW__System_Text_Encoding_CodePages* lpCPInfoEx)
		{
			// Setup
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.api_ms_win_core_localization_l1_2_0_dll_PInvokes.GetCPInfoExW(
								CodePage, 
								dwFlags, 
								((global::Interop_mincore_CPINFOEXW__System_Text_Encoding_CodePages*)lpCPInfoEx)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
			return unsafe___value;
		}
	}

	/// <summary>
	/// P/Invoke class for module 'api-ms-win-core-com-l1-1-0.dll'
	/// </summary>
	public unsafe static partial class api_ms_win_core_com_l1_1_0_dll
	{
		// Signature, CoCreateInstance, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] byte___ptrunsigned char *, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] byte___ptrunsigned char *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.StackTraceGenerator, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "Internal.StackTraceGenerator.StackTraceGenerator", "CoCreateInstance")]
		public static int CoCreateInstance(
					byte* rclsid, 
					global::System.IntPtr pUnkOuter, 
					int dwClsContext, 
					byte* riid, 
					out global::System.IntPtr ppv)
		{
			// Setup
			global::System.IntPtr unsafe_ppv;
			int unsafe___value;
			// Marshalling
			// Call to native method
			unsafe___value = global::__Interop.api_ms_win_core_com_l1_1_0_dll_PInvokes.CoCreateInstance(
								((byte*)rclsid), 
								pUnkOuter, 
								dwClsContext, 
								((byte*)riid), 
								&(unsafe_ppv)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			ppv = unsafe_ppv;
			// Return
			return unsafe___value;
		}
	}

	/// <summary>
	/// P/Invoke class for module 'oleaut32.dll'
	/// </summary>
	public unsafe static partial class oleaut32_dll
	{
		// Signature, SysFreeString, [fwd] [return] [Mcg.CodeGen.VoidReturnMarshaller] void__void, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Private.StackTraceGenerator, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "Internal.LightweightInterop.MarshalExtensions", "SysFreeString")]
		public static void SysFreeString(global::System.IntPtr bstr)
		{
			// Marshalling
			// Call to native method
			global::__Interop.oleaut32_dll_PInvokes.SysFreeString(bstr);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}
	}

	/// <summary>
	/// P/Invoke class for module 'api-ms-win-core-winrt-robuffer-l1-1-0.dll'
	/// </summary>
	public unsafe static partial class api_ms_win_core_winrt_robuffer_l1_1_0_dll
	{
		// Signature, RoGetBufferMarshaler, [fwd] [return] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Runtime_InteropServices_IMarshal__System_Runtime_WindowsRuntime__System_Runtime_InteropServices__IMarshal__System_Runtime_WindowsRuntime *, 
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		[global::System.Runtime.InteropServices.McgPInvokeMarshalStub("System.Runtime.WindowsRuntime, Version=4.0.12.0, Culture=neutral, PublicKeyToken=b77a5c561934e089", "Interop+mincore", "RoGetBufferMarshaler")]
		public static int RoGetBufferMarshaler(out global::System.Runtime.InteropServices.IMarshal__System_Runtime_WindowsRuntime bufferMarshalerPtr)
		{
			// Setup
			void* unsafe_bufferMarshalerPtr = default(void*);
			int unsafe___value;
			try
			{
				// Marshalling
				unsafe_bufferMarshalerPtr = null;
				// Call to native method
				unsafe___value = global::__Interop.api_ms_win_core_winrt_robuffer_l1_1_0_dll_PInvokes.RoGetBufferMarshaler(&(unsafe_bufferMarshalerPtr));
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				bufferMarshalerPtr = (global::System.Runtime.InteropServices.IMarshal__System_Runtime_WindowsRuntime)global::System.Runtime.InteropServices.McgMarshal.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_bufferMarshalerPtr), 
									global::System.Runtime.InteropServices.TypeOfHelper.RuntimeTypeHandleOf("System.Runtime.InteropServices.IMarshal,System.Runtime.WindowsRuntime, Version=4.0.12.0, Culture=neutral, Public" +
											"KeyToken=b77a5c561934e089")
								);
				// Return
				return unsafe___value;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_bufferMarshalerPtr)));
			}
		}
	}

	public unsafe static partial class sqlite3_PInvokes
	{
		[global::System.Runtime.InteropServices.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_bind_blob(
					global::System.IntPtr pStmt, 
					int i, 
					byte* zData, 
					int nData, 
					global::System.IntPtr xDel);

		[global::System.Runtime.InteropServices.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_bind_double(
					global::System.IntPtr pStmt, 
					int i, 
					double rValue);

		[global::System.Runtime.InteropServices.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_bind_int64(
					global::System.IntPtr pStmt, 
					int i, 
					long iValue);

		[global::System.Runtime.InteropServices.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_bind_null(
					global::System.IntPtr pStmt, 
					int i);

		[global::System.Runtime.InteropServices.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_bind_parameter_count(global::System.IntPtr stmt);

		[global::System.Runtime.InteropServices.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_bind_parameter_index(
					global::System.IntPtr pStmt, 
					global::System.IntPtr zName);

		[global::System.Runtime.InteropServices.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr sqlite3_bind_parameter_name(
					global::System.IntPtr stmt, 
					int i);

		[global::System.Runtime.InteropServices.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_bind_text(
					global::System.IntPtr pStmt, 
					int i, 
					global::System.IntPtr zData, 
					int n, 
					global::System.IntPtr xDel);

		[global::System.Runtime.InteropServices.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_busy_timeout(
					global::System.IntPtr db, 
					int ms);

		[global::System.Runtime.InteropServices.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_changes(global::System.IntPtr db);

		[global::System.Runtime.InteropServices.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_close(global::System.IntPtr db);

		[global::System.Runtime.InteropServices.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_close_v2(global::System.IntPtr db);

		[global::System.Runtime.InteropServices.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr sqlite3_column_blob(
					global::System.IntPtr pStmt, 
					int iCol);

		[global::System.Runtime.InteropServices.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_column_bytes(
					global::System.IntPtr pStmt, 
					int iCol);

		[global::System.Runtime.InteropServices.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_column_count(global::System.IntPtr stmt);

		[global::System.Runtime.InteropServices.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr sqlite3_column_decltype(
					global::System.IntPtr stmt, 
					int iCol);

		[global::System.Runtime.InteropServices.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static double sqlite3_column_double(
					global::System.IntPtr stmt, 
					int iCol);

		[global::System.Runtime.InteropServices.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static long sqlite3_column_int64(
					global::System.IntPtr stmt, 
					int iCol);

		[global::System.Runtime.InteropServices.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr sqlite3_column_name(
					global::System.IntPtr stmt, 
					int iCol);

		[global::System.Runtime.InteropServices.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr sqlite3_column_text(
					global::System.IntPtr stmt, 
					int iCol);

		[global::System.Runtime.InteropServices.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_column_type(
					global::System.IntPtr stmt, 
					int iCol);

		[global::System.Runtime.InteropServices.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr sqlite3_db_filename(
					global::System.IntPtr db, 
					global::System.IntPtr zDbName);

		[global::System.Runtime.InteropServices.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_enable_load_extension(
					global::System.IntPtr db, 
					int onoff);

		[global::System.Runtime.InteropServices.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr sqlite3_errmsg(global::System.IntPtr db);

		[global::System.Runtime.InteropServices.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr sqlite3_errstr(int rc);

		[global::System.Runtime.InteropServices.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_finalize(global::System.IntPtr pStmt);

		[global::System.Runtime.InteropServices.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static global::System.IntPtr sqlite3_libversion();

		[global::System.Runtime.InteropServices.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_open_v2(
					global::System.IntPtr filename, 
					global::System.IntPtr* ppDb, 
					int flags, 
					global::System.IntPtr vfs);

		[global::System.Runtime.InteropServices.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_prepare_v2(
					global::System.IntPtr db, 
					global::System.IntPtr zSql, 
					int nByte, 
					global::System.IntPtr* ppStmt, 
					global::System.IntPtr* pzTail);

		[global::System.Runtime.InteropServices.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_reset(global::System.IntPtr stmt);

		[global::System.Runtime.InteropServices.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_step(global::System.IntPtr stmt);

		[global::System.Runtime.InteropServices.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("sqlite3", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int sqlite3_stmt_readonly(global::System.IntPtr pStmt);
	}

	public unsafe static partial class winsqlite3_dll_PInvokes
	{
		[global::System.Runtime.InteropServices.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("winsqlite3.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int sqlite3_bind_blob(
					global::System.IntPtr pStmt, 
					int i, 
					byte* zData, 
					int nData, 
					global::System.IntPtr xDel);

		[global::System.Runtime.InteropServices.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("winsqlite3.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int sqlite3_bind_double(
					global::System.IntPtr pStmt, 
					int i, 
					double rValue);

		[global::System.Runtime.InteropServices.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("winsqlite3.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int sqlite3_bind_int64(
					global::System.IntPtr pStmt, 
					int i, 
					long iValue);

		[global::System.Runtime.InteropServices.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("winsqlite3.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int sqlite3_bind_null(
					global::System.IntPtr pStmt, 
					int i);

		[global::System.Runtime.InteropServices.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("winsqlite3.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int sqlite3_bind_parameter_count(global::System.IntPtr stmt);

		[global::System.Runtime.InteropServices.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("winsqlite3.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int sqlite3_bind_parameter_index(
					global::System.IntPtr pStmt, 
					global::System.IntPtr zName);

		[global::System.Runtime.InteropServices.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("winsqlite3.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static global::System.IntPtr sqlite3_bind_parameter_name(
					global::System.IntPtr stmt, 
					int i);

		[global::System.Runtime.InteropServices.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("winsqlite3.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int sqlite3_bind_text(
					global::System.IntPtr pStmt, 
					int i, 
					global::System.IntPtr zData, 
					int n, 
					global::System.IntPtr xDel);

		[global::System.Runtime.InteropServices.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("winsqlite3.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int sqlite3_busy_timeout(
					global::System.IntPtr db, 
					int ms);

		[global::System.Runtime.InteropServices.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("winsqlite3.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int sqlite3_changes(global::System.IntPtr db);

		[global::System.Runtime.InteropServices.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("winsqlite3.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int sqlite3_close(global::System.IntPtr db);

		[global::System.Runtime.InteropServices.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("winsqlite3.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int sqlite3_close_v2(global::System.IntPtr db);

		[global::System.Runtime.InteropServices.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("winsqlite3.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static global::System.IntPtr sqlite3_column_blob(
					global::System.IntPtr pStmt, 
					int iCol);

		[global::System.Runtime.InteropServices.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("winsqlite3.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int sqlite3_column_bytes(
					global::System.IntPtr pStmt, 
					int iCol);

		[global::System.Runtime.InteropServices.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("winsqlite3.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int sqlite3_column_count(global::System.IntPtr stmt);

		[global::System.Runtime.InteropServices.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("winsqlite3.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static global::System.IntPtr sqlite3_column_decltype(
					global::System.IntPtr stmt, 
					int iCol);

		[global::System.Runtime.InteropServices.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("winsqlite3.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static double sqlite3_column_double(
					global::System.IntPtr stmt, 
					int iCol);

		[global::System.Runtime.InteropServices.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("winsqlite3.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static long sqlite3_column_int64(
					global::System.IntPtr stmt, 
					int iCol);

		[global::System.Runtime.InteropServices.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("winsqlite3.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static global::System.IntPtr sqlite3_column_name(
					global::System.IntPtr stmt, 
					int iCol);

		[global::System.Runtime.InteropServices.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("winsqlite3.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static global::System.IntPtr sqlite3_column_text(
					global::System.IntPtr stmt, 
					int iCol);

		[global::System.Runtime.InteropServices.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("winsqlite3.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int sqlite3_column_type(
					global::System.IntPtr stmt, 
					int iCol);

		[global::System.Runtime.InteropServices.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("winsqlite3.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static global::System.IntPtr sqlite3_db_filename(
					global::System.IntPtr db, 
					global::System.IntPtr zDbName);

		[global::System.Runtime.InteropServices.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("winsqlite3.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int sqlite3_enable_load_extension(
					global::System.IntPtr db, 
					int onoff);

		[global::System.Runtime.InteropServices.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("winsqlite3.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static global::System.IntPtr sqlite3_errmsg(global::System.IntPtr db);

		[global::System.Runtime.InteropServices.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("winsqlite3.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static global::System.IntPtr sqlite3_errstr(int rc);

		[global::System.Runtime.InteropServices.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("winsqlite3.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int sqlite3_finalize(global::System.IntPtr pStmt);

		[global::System.Runtime.InteropServices.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("winsqlite3.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static global::System.IntPtr sqlite3_libversion();

		[global::System.Runtime.InteropServices.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("winsqlite3.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int sqlite3_open_v2(
					global::System.IntPtr filename, 
					global::System.IntPtr* ppDb, 
					int flags, 
					global::System.IntPtr vfs);

		[global::System.Runtime.InteropServices.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("winsqlite3.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int sqlite3_prepare_v2(
					global::System.IntPtr db, 
					global::System.IntPtr zSql, 
					int nByte, 
					global::System.IntPtr* ppStmt, 
					global::System.IntPtr* pzTail);

		[global::System.Runtime.InteropServices.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("winsqlite3.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int sqlite3_reset(global::System.IntPtr stmt);

		[global::System.Runtime.InteropServices.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("winsqlite3.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int sqlite3_step(global::System.IntPtr stmt);

		[global::System.Runtime.InteropServices.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("winsqlite3.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int sqlite3_stmt_readonly(global::System.IntPtr pStmt);
	}

	public unsafe static partial class _MRT__PInvokes
	{
		[global::System.Runtime.InteropServices.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("[MRT]", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static void RhWaitForPendingFinalizers(int allowReentrantWait);

		[global::System.Runtime.InteropServices.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("[MRT]", EntryPoint="RhYield", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl)]
		public extern static int _RhYield();

		[global::System.Runtime.InteropServices.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("[MRT]", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static int RhCompatibleReentrantWaitAny(
					int alertable, 
					int timeout, 
					int count, 
					global::System.IntPtr* handles);

		[global::System.Runtime.InteropServices.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("[MRT]", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static void _ecvt_s(
					byte* buffer, 
					int sizeInBytes, 
					double value, 
					int count, 
					int* dec, 
					int* sign);

		[global::System.Runtime.InteropServices.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("[MRT]", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static void memmove(
					byte* dmem, 
					byte* smem, 
					uint size);
	}

	public unsafe static partial class __PInvokes
	{
		[global::System.Runtime.InteropServices.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("*", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static void CallingConventionConverter_GetStubs(
					global::System.IntPtr* returnVoidStub, 
					global::System.IntPtr* returnIntegerStub, 
					global::System.IntPtr* commonStub, 
					global::System.IntPtr* returnFloatingPointReturn4Thunk, 
					global::System.IntPtr* returnFloatingPointReturn8Thunk);
	}

	public unsafe static partial class api_ms_win_core_errorhandling_l1_1_0_dll_PInvokes
	{
		[global::System.Runtime.InteropServices.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("api-ms-win-core-errorhandling-l1-1-0.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static int GetLastError();
	}

	public unsafe static partial class api_ms_win_core_winrt_l1_1_0_dll_PInvokes
	{
		[global::System.Runtime.InteropServices.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("api-ms-win-core-winrt-l1-1-0.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static int RoInitialize(uint initType);
	}

	public unsafe static partial class api_ms_win_core_localization_l1_2_0_dll_PInvokes
	{
		[global::System.Runtime.InteropServices.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("api-ms-win-core-localization-l1-2-0.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static int IsValidLocaleName(ushort* lpLocaleName);

		[global::System.Runtime.InteropServices.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("api-ms-win-core-localization-l1-2-0.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static int ResolveLocaleName(
					ushort* lpNameToResolve, 
					ushort* lpLocaleName, 
					int cchLocaleName);

		[global::System.Runtime.InteropServices.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("api-ms-win-core-localization-l1-2-0.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static int GetCPInfoExW(
					uint CodePage, 
					uint dwFlags, 
					global::Interop_mincore_CPINFOEXW__System_Text_Encoding_CodePages* lpCPInfoEx);
	}

	public unsafe static partial class api_ms_win_core_com_l1_1_0_dll_PInvokes
	{
		[global::System.Runtime.InteropServices.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("api-ms-win-core-com-l1-1-0.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static int CoCreateInstance(
					byte* rclsid, 
					global::System.IntPtr pUnkOuter, 
					int dwClsContext, 
					byte* riid, 
					global::System.IntPtr* ppv);
	}

	public unsafe static partial class oleaut32_dll_PInvokes
	{
		[global::System.Runtime.InteropServices.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("oleaut32.dll", EntryPoint="#6", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Winapi)]
		public extern static void SysFreeString(global::System.IntPtr bstr);
	}

	public unsafe static partial class api_ms_win_core_winrt_robuffer_l1_1_0_dll_PInvokes
	{
		[global::System.Runtime.InteropServices.McgGeneratedNativeCallCode]
		[global::System.Runtime.InteropServices.DllImport("api-ms-win-core-winrt-robuffer-l1-1-0.dll", CallingConvention=global::System.Runtime.InteropServices.CallingConvention.StdCall)]
		public extern static int RoGetBufferMarshaler(void** bufferMarshalerPtr);
	}
}

